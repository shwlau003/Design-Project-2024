ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	Error_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	Error_Handler:
  26              	.LFB46:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "gpio.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** #include "lcd_stm32f0.h"
  27:Core/Src/main.c **** #include "stdio.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 2


  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* Threshold value for ADC reading */
  38:Core/Src/main.c **** #define THRESHOLD 1900 // Adjust threshold value as needed
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* LED pins */
  41:Core/Src/main.c **** #define LED_LEFT_Pin  GPIO_PIN_7
  42:Core/Src/main.c **** #define LED_LEFT_GPIO_Port  GPIOB
  43:Core/Src/main.c **** #define LED_FRONT_Pin GPIO_PIN_6
  44:Core/Src/main.c **** #define LED_FRONT_GPIO_Port GPIOB
  45:Core/Src/main.c **** #define LED_RIGHT_Pin GPIO_PIN_5
  46:Core/Src/main.c **** #define LED_RIGHT_GPIO_Port GPIOB
  47:Core/Src/main.c **** /* USER CODE END PD */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  50:Core/Src/main.c **** /* USER CODE BEGIN PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PM */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE BEGIN PV */
  57:Core/Src/main.c **** //JUSTIN - START 1/3
  58:Core/Src/main.c **** uint16_t adc_value_left;
  59:Core/Src/main.c **** uint16_t adc_value_front;
  60:Core/Src/main.c **** uint16_t adc_value_right;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** // char LCD_buffer[]; 
  63:Core/Src/main.c **** //JUSTIN - END
  64:Core/Src/main.c **** /* USER CODE END PV */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  67:Core/Src/main.c **** void SystemClock_Config(void);
  68:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END PFP */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  73:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /**
  78:Core/Src/main.c ****   * @brief  The application entry point.
  79:Core/Src/main.c ****   * @retval int
  80:Core/Src/main.c ****   */
  81:Core/Src/main.c **** int main(void)
  82:Core/Src/main.c **** {
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END 1 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  89:Core/Src/main.c **** 
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 3


  90:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  91:Core/Src/main.c ****   HAL_Init();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END Init */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Configure the system clock */
  98:Core/Src/main.c ****   SystemClock_Config();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END SysInit */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Initialize all configured peripherals */
 105:Core/Src/main.c ****   MX_GPIO_Init();
 106:Core/Src/main.c ****   MX_ADC_Init();
 107:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END 2 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Infinite loop */
 112:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   // init_LCD();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   while (1)
 117:Core/Src/main.c ****   {
 118:Core/Src/main.c ****     /* USER CODE END WHILE */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 121:Core/Src/main.c ****     //JUSTIN - START 2/3
 122:Core/Src/main.c ****     // lcd_command(CLEAR);   
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****     ADC1 -> CHSELR = ADC_CHSELR_CHSEL3; //left sensor's channel
 125:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 126:Core/Src/main.c ****     HAL_Delay(10);
 127:Core/Src/main.c ****     while(HAL_ADC_PollForConversion(&hadc,HAL_MAX_DELAY)!= HAL_OK);
 128:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 129:Core/Src/main.c ****     adc_value_left = HAL_ADC_GetValue(&hadc);
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****     ADC1 -> CHSELR = ADC_CHSELR_CHSEL4; //front sensor's channel
 132:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 133:Core/Src/main.c ****     HAL_Delay(10);
 134:Core/Src/main.c ****     while(HAL_ADC_PollForConversion(&hadc,HAL_MAX_DELAY)!= HAL_OK);
 135:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 136:Core/Src/main.c ****     adc_value_front = HAL_ADC_GetValue(&hadc);
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****     ADC1 -> CHSELR = ADC_CHSELR_CHSEL5; //right sensor's channel
 139:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 140:Core/Src/main.c ****     HAL_Delay(10);
 141:Core/Src/main.c ****     while(HAL_ADC_PollForConversion(&hadc,HAL_MAX_DELAY)!= HAL_OK);
 142:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 143:Core/Src/main.c ****     adc_value_right = HAL_ADC_GetValue(&hadc);
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****     if (adc_value_left > THRESHOLD) {
 146:Core/Src/main.c ****         // Activate LED for PA3 (left)
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 4


 147:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_LEFT_GPIO_Port, LED_LEFT_Pin, GPIO_PIN_SET);
 148:Core/Src/main.c ****     } else {
 149:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_LEFT_GPIO_Port, LED_LEFT_Pin, GPIO_PIN_RESET);
 150:Core/Src/main.c ****     }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****     if (adc_value_front > THRESHOLD) {
 153:Core/Src/main.c ****         // Activate LED for PA4 (front)
 154:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_FRONT_GPIO_Port, LED_FRONT_Pin, GPIO_PIN_SET);
 155:Core/Src/main.c ****     } else {
 156:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_FRONT_GPIO_Port, LED_FRONT_Pin, GPIO_PIN_RESET);
 157:Core/Src/main.c ****     }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****     if (adc_value_right > THRESHOLD) {
 160:Core/Src/main.c ****         // Activate LED for PA5 (right)
 161:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_RIGHT_GPIO_Port, LED_RIGHT_Pin, GPIO_PIN_SET);
 162:Core/Src/main.c ****     } else {
 163:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_RIGHT_GPIO_Port, LED_RIGHT_Pin, GPIO_PIN_RESET);
 164:Core/Src/main.c ****     }
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****     // // Prints to LCD
 167:Core/Src/main.c ****     // sprintf(LCD_buffer, "CHANNEL 4: %d", adc_value_front); // Convert integer to string
 168:Core/Src/main.c ****     // lcd_putstring(LCD_buffer);
 169:Core/Src/main.c ****     // lcd_command(LINE_TWO);
 170:Core/Src/main.c ****     // sprintf(LCD_buffer, "CHANNEL 5: %d", adc_value_right); // Convert integer to string
 171:Core/Src/main.c ****     // lcd_putstring(LCD_buffer);
 172:Core/Src/main.c ****     // HAL_Delay(500);
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****     //JUSTIN - END
 175:Core/Src/main.c ****   }
 176:Core/Src/main.c ****   /* USER CODE END 3 */
 177:Core/Src/main.c **** }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****   * @brief System Clock Configuration
 181:Core/Src/main.c ****   * @retval None
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c **** void SystemClock_Config(void)
 184:Core/Src/main.c **** {
 185:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 186:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 189:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14;
 192:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 193:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 194:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 195:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 200:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 201:Core/Src/main.c ****   {
 202:Core/Src/main.c ****     Error_Handler();
 203:Core/Src/main.c ****   }
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 5


 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 206:Core/Src/main.c ****   */
 207:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 208:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 209:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 210:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 214:Core/Src/main.c ****   {
 215:Core/Src/main.c ****     Error_Handler();
 216:Core/Src/main.c ****   }
 217:Core/Src/main.c **** }
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 220:Core/Src/main.c **** //JUSTIN - START 3/3
 221:Core/Src/main.c **** /* I took this code from the adc.c file - In the init section.
 222:Core/Src/main.c **** * Regrettably setting up the ADC for reading multiple channels is not great without using DMA (scar
 223:Core/Src/main.c **** * So you would need to just look at that file and work out how to modify your set channel according
 224:Core/Src/main.c **** */
 225:Core/Src/main.c **** void adc_set_channel(uint16_t adcChannelNum) {
 226:Core/Src/main.c ****     ADC_ChannelConfTypeDef sConfig = {0};
 227:Core/Src/main.c ****     sConfig.Channel = adcChannelNum;
 228:Core/Src/main.c ****     sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 229:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 230:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 231:Core/Src/main.c ****     {
 232:Core/Src/main.c ****       Error_Handler();
 233:Core/Src/main.c ****     }
 234:Core/Src/main.c **** }
 235:Core/Src/main.c **** //JUSTIN - END
 236:Core/Src/main.c **** /* USER CODE END 4 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** /**
 239:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 240:Core/Src/main.c ****   * @retval None
 241:Core/Src/main.c ****   */
 242:Core/Src/main.c **** void Error_Handler(void)
 243:Core/Src/main.c **** {
  27              		.loc 1 243 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 244:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 245:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 246:Core/Src/main.c ****   __disable_irq();
  33              		.loc 1 246 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 6


   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 7


  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 8


 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 140 27 view .LVU2
  38              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 142 3 view .LVU3
  40              		.syntax divided
  41              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
 247:Core/Src/main.c ****   while (1)
  49              		.loc 1 247 3 discriminator 1 view .LVU4
 248:Core/Src/main.c ****   {
 249:Core/Src/main.c ****   }
  50              		.loc 1 249 3 discriminator 1 view .LVU5
 247:Core/Src/main.c ****   while (1)
  51              		.loc 1 247 9 discriminator 1 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE46:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.code	16
  61              		.thumb_func
  63              	SystemClock_Config:
  64              	.LFB44:
 184:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  65              		.loc 1 184 1 view -0
  66              		.cfi_startproc
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 9


  67              		@ args = 0, pretend = 0, frame = 64
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 10B5     		push	{r4, lr}
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
  72              		.cfi_offset 14, -4
  73 0002 90B0     		sub	sp, sp, #64
  74              		.cfi_def_cfa_offset 72
 185:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  75              		.loc 1 185 3 view .LVU8
 185:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  76              		.loc 1 185 22 is_stmt 0 view .LVU9
  77 0004 3022     		movs	r2, #48
  78 0006 0021     		movs	r1, #0
  79 0008 04A8     		add	r0, sp, #16
  80 000a FFF7FEFF 		bl	memset
  81              	.LVL0:
 186:Core/Src/main.c **** 
  82              		.loc 1 186 3 is_stmt 1 view .LVU10
 186:Core/Src/main.c **** 
  83              		.loc 1 186 22 is_stmt 0 view .LVU11
  84 000e 1024     		movs	r4, #16
  85 0010 1022     		movs	r2, #16
  86 0012 0021     		movs	r1, #0
  87 0014 6846     		mov	r0, sp
  88 0016 FFF7FEFF 		bl	memset
  89              	.LVL1:
 191:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  90              		.loc 1 191 3 is_stmt 1 view .LVU12
 191:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  91              		.loc 1 191 36 is_stmt 0 view .LVU13
  92 001a 1223     		movs	r3, #18
  93 001c 0493     		str	r3, [sp, #16]
 192:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
  94              		.loc 1 192 3 is_stmt 1 view .LVU14
 192:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
  95              		.loc 1 192 30 is_stmt 0 view .LVU15
  96 001e 113B     		subs	r3, r3, #17
  97 0020 0793     		str	r3, [sp, #28]
 193:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  98              		.loc 1 193 3 is_stmt 1 view .LVU16
 193:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  99              		.loc 1 193 32 is_stmt 0 view .LVU17
 100 0022 0993     		str	r3, [sp, #36]
 194:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 101              		.loc 1 194 3 is_stmt 1 view .LVU18
 194:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 102              		.loc 1 194 41 is_stmt 0 view .LVU19
 103 0024 0894     		str	r4, [sp, #32]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 104              		.loc 1 195 3 is_stmt 1 view .LVU20
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 105              		.loc 1 195 43 is_stmt 0 view .LVU21
 106 0026 0A94     		str	r4, [sp, #40]
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 107              		.loc 1 196 3 is_stmt 1 view .LVU22
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 10


 108              		.loc 1 196 34 is_stmt 0 view .LVU23
 109 0028 0133     		adds	r3, r3, #1
 110 002a 0C93     		str	r3, [sp, #48]
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 111              		.loc 1 197 3 is_stmt 1 view .LVU24
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 112              		.loc 1 198 3 view .LVU25
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 113              		.loc 1 198 32 is_stmt 0 view .LVU26
 114 002c A023     		movs	r3, #160
 115 002e 9B03     		lsls	r3, r3, #14
 116 0030 0E93     		str	r3, [sp, #56]
 199:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 117              		.loc 1 199 3 is_stmt 1 view .LVU27
 200:Core/Src/main.c ****   {
 118              		.loc 1 200 3 view .LVU28
 200:Core/Src/main.c ****   {
 119              		.loc 1 200 7 is_stmt 0 view .LVU29
 120 0032 04A8     		add	r0, sp, #16
 121 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 122              	.LVL2:
 200:Core/Src/main.c ****   {
 123              		.loc 1 200 6 view .LVU30
 124 0038 0028     		cmp	r0, #0
 125 003a 0ED1     		bne	.L6
 207:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 126              		.loc 1 207 3 is_stmt 1 view .LVU31
 207:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 127              		.loc 1 207 31 is_stmt 0 view .LVU32
 128 003c 0723     		movs	r3, #7
 129 003e 0093     		str	r3, [sp]
 209:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 130              		.loc 1 209 3 is_stmt 1 view .LVU33
 209:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 131              		.loc 1 209 34 is_stmt 0 view .LVU34
 132 0040 053B     		subs	r3, r3, #5
 133 0042 0193     		str	r3, [sp, #4]
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 134              		.loc 1 210 3 is_stmt 1 view .LVU35
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 135              		.loc 1 210 35 is_stmt 0 view .LVU36
 136 0044 0023     		movs	r3, #0
 137 0046 0293     		str	r3, [sp, #8]
 211:Core/Src/main.c **** 
 138              		.loc 1 211 3 is_stmt 1 view .LVU37
 211:Core/Src/main.c **** 
 139              		.loc 1 211 36 is_stmt 0 view .LVU38
 140 0048 0393     		str	r3, [sp, #12]
 213:Core/Src/main.c ****   {
 141              		.loc 1 213 3 is_stmt 1 view .LVU39
 213:Core/Src/main.c ****   {
 142              		.loc 1 213 7 is_stmt 0 view .LVU40
 143 004a 0121     		movs	r1, #1
 144 004c 6846     		mov	r0, sp
 145 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 146              	.LVL3:
 213:Core/Src/main.c ****   {
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 11


 147              		.loc 1 213 6 view .LVU41
 148 0052 0028     		cmp	r0, #0
 149 0054 03D1     		bne	.L7
 217:Core/Src/main.c **** 
 150              		.loc 1 217 1 view .LVU42
 151 0056 10B0     		add	sp, sp, #64
 152              		@ sp needed
 153 0058 10BD     		pop	{r4, pc}
 154              	.L6:
 202:Core/Src/main.c ****   }
 155              		.loc 1 202 5 is_stmt 1 view .LVU43
 156 005a FFF7FEFF 		bl	Error_Handler
 157              	.LVL4:
 158              	.L7:
 215:Core/Src/main.c ****   }
 159              		.loc 1 215 5 view .LVU44
 160 005e FFF7FEFF 		bl	Error_Handler
 161              	.LVL5:
 162              		.cfi_endproc
 163              	.LFE44:
 165              		.section	.text.main,"ax",%progbits
 166              		.align	1
 167              		.global	main
 168              		.syntax unified
 169              		.code	16
 170              		.thumb_func
 172              	main:
 173              	.LFB43:
  82:Core/Src/main.c **** 
 174              		.loc 1 82 1 view -0
 175              		.cfi_startproc
 176              		@ Volatile: function does not return.
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179 0000 10B5     		push	{r4, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 4, -8
 182              		.cfi_offset 14, -4
  91:Core/Src/main.c **** 
 183              		.loc 1 91 3 view .LVU46
 184 0002 FFF7FEFF 		bl	HAL_Init
 185              	.LVL6:
  98:Core/Src/main.c **** 
 186              		.loc 1 98 3 view .LVU47
 187 0006 FFF7FEFF 		bl	SystemClock_Config
 188              	.LVL7:
 105:Core/Src/main.c ****   MX_ADC_Init();
 189              		.loc 1 105 3 view .LVU48
 190 000a FFF7FEFF 		bl	MX_GPIO_Init
 191              	.LVL8:
 106:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 192              		.loc 1 106 3 view .LVU49
 193 000e FFF7FEFF 		bl	MX_ADC_Init
 194              	.LVL9:
 195 0012 14E0     		b	.L9
 196              	.L13:
 149:Core/Src/main.c ****     }
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 12


 197              		.loc 1 149 9 view .LVU50
 198 0014 0022     		movs	r2, #0
 199 0016 8021     		movs	r1, #128
 200 0018 3C48     		ldr	r0, .L19
 201 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 202              	.LVL10:
 203 001e 63E0     		b	.L14
 204              	.L15:
 156:Core/Src/main.c ****     }
 205              		.loc 1 156 9 view .LVU51
 206 0020 0022     		movs	r2, #0
 207 0022 4021     		movs	r1, #64
 208 0024 3948     		ldr	r0, .L19
 209 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 210              	.LVL11:
 211              	.L16:
 159:Core/Src/main.c ****         // Activate LED for PA5 (right)
 212              		.loc 1 159 5 view .LVU52
 159:Core/Src/main.c ****         // Activate LED for PA5 (right)
 213              		.loc 1 159 25 is_stmt 0 view .LVU53
 214 002a 394B     		ldr	r3, .L19+4
 215 002c 1A88     		ldrh	r2, [r3]
 159:Core/Src/main.c ****         // Activate LED for PA5 (right)
 216              		.loc 1 159 8 view .LVU54
 217 002e 394B     		ldr	r3, .L19+8
 218 0030 9A42     		cmp	r2, r3
 219 0032 64D9     		bls	.L17
 161:Core/Src/main.c ****     } else {
 220              		.loc 1 161 9 is_stmt 1 view .LVU55
 221 0034 0122     		movs	r2, #1
 222 0036 2021     		movs	r1, #32
 223 0038 3448     		ldr	r0, .L19
 224 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 225              	.LVL12:
 226              	.L9:
 116:Core/Src/main.c ****   {
 227              		.loc 1 116 3 view .LVU56
 124:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 228              		.loc 1 124 5 view .LVU57
 124:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 229              		.loc 1 124 20 is_stmt 0 view .LVU58
 230 003e 364B     		ldr	r3, .L19+12
 231 0040 0822     		movs	r2, #8
 232 0042 9A62     		str	r2, [r3, #40]
 125:Core/Src/main.c ****     HAL_Delay(10);
 233              		.loc 1 125 5 is_stmt 1 view .LVU59
 234 0044 3548     		ldr	r0, .L19+16
 235 0046 FFF7FEFF 		bl	HAL_ADC_Start
 236              	.LVL13:
 126:Core/Src/main.c ****     while(HAL_ADC_PollForConversion(&hadc,HAL_MAX_DELAY)!= HAL_OK);
 237              		.loc 1 126 5 view .LVU60
 238 004a 0A20     		movs	r0, #10
 239 004c FFF7FEFF 		bl	HAL_Delay
 240              	.LVL14:
 127:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 241              		.loc 1 127 5 view .LVU61
 242              	.L10:
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 13


 127:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 243              		.loc 1 127 57 discriminator 1 view .LVU62
 127:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 244              		.loc 1 127 11 is_stmt 0 discriminator 1 view .LVU63
 245 0050 0121     		movs	r1, #1
 246 0052 3248     		ldr	r0, .L19+16
 247 0054 4942     		rsbs	r1, r1, #0
 248 0056 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 249              	.LVL15:
 127:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 250              		.loc 1 127 57 discriminator 1 view .LVU64
 251 005a 0028     		cmp	r0, #0
 252 005c F8D1     		bne	.L10
 128:Core/Src/main.c ****     adc_value_left = HAL_ADC_GetValue(&hadc);
 253              		.loc 1 128 5 is_stmt 1 view .LVU65
 254 005e 2F4C     		ldr	r4, .L19+16
 255 0060 2000     		movs	r0, r4
 256 0062 FFF7FEFF 		bl	HAL_ADC_Stop
 257              	.LVL16:
 129:Core/Src/main.c **** 
 258              		.loc 1 129 5 view .LVU66
 129:Core/Src/main.c **** 
 259              		.loc 1 129 22 is_stmt 0 view .LVU67
 260 0066 2000     		movs	r0, r4
 261 0068 FFF7FEFF 		bl	HAL_ADC_GetValue
 262              	.LVL17:
 129:Core/Src/main.c **** 
 263              		.loc 1 129 20 view .LVU68
 264 006c 2C4B     		ldr	r3, .L19+20
 265 006e 1880     		strh	r0, [r3]
 131:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 266              		.loc 1 131 5 is_stmt 1 view .LVU69
 131:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 267              		.loc 1 131 20 is_stmt 0 view .LVU70
 268 0070 294B     		ldr	r3, .L19+12
 269 0072 1022     		movs	r2, #16
 270 0074 9A62     		str	r2, [r3, #40]
 132:Core/Src/main.c ****     HAL_Delay(10);
 271              		.loc 1 132 5 is_stmt 1 view .LVU71
 272 0076 2000     		movs	r0, r4
 273 0078 FFF7FEFF 		bl	HAL_ADC_Start
 274              	.LVL18:
 133:Core/Src/main.c ****     while(HAL_ADC_PollForConversion(&hadc,HAL_MAX_DELAY)!= HAL_OK);
 275              		.loc 1 133 5 view .LVU72
 276 007c 0A20     		movs	r0, #10
 277 007e FFF7FEFF 		bl	HAL_Delay
 278              	.LVL19:
 134:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 279              		.loc 1 134 5 view .LVU73
 280              	.L11:
 134:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 281              		.loc 1 134 57 discriminator 1 view .LVU74
 134:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 282              		.loc 1 134 11 is_stmt 0 discriminator 1 view .LVU75
 283 0082 0121     		movs	r1, #1
 284 0084 2548     		ldr	r0, .L19+16
 285 0086 4942     		rsbs	r1, r1, #0
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 14


 286 0088 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 287              	.LVL20:
 134:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 288              		.loc 1 134 57 discriminator 1 view .LVU76
 289 008c 0028     		cmp	r0, #0
 290 008e F8D1     		bne	.L11
 135:Core/Src/main.c ****     adc_value_front = HAL_ADC_GetValue(&hadc);
 291              		.loc 1 135 5 is_stmt 1 view .LVU77
 292 0090 224C     		ldr	r4, .L19+16
 293 0092 2000     		movs	r0, r4
 294 0094 FFF7FEFF 		bl	HAL_ADC_Stop
 295              	.LVL21:
 136:Core/Src/main.c **** 
 296              		.loc 1 136 5 view .LVU78
 136:Core/Src/main.c **** 
 297              		.loc 1 136 23 is_stmt 0 view .LVU79
 298 0098 2000     		movs	r0, r4
 299 009a FFF7FEFF 		bl	HAL_ADC_GetValue
 300              	.LVL22:
 136:Core/Src/main.c **** 
 301              		.loc 1 136 21 view .LVU80
 302 009e 214B     		ldr	r3, .L19+24
 303 00a0 1880     		strh	r0, [r3]
 138:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 304              		.loc 1 138 5 is_stmt 1 view .LVU81
 138:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 305              		.loc 1 138 20 is_stmt 0 view .LVU82
 306 00a2 1D4B     		ldr	r3, .L19+12
 307 00a4 2022     		movs	r2, #32
 308 00a6 9A62     		str	r2, [r3, #40]
 139:Core/Src/main.c ****     HAL_Delay(10);
 309              		.loc 1 139 5 is_stmt 1 view .LVU83
 310 00a8 2000     		movs	r0, r4
 311 00aa FFF7FEFF 		bl	HAL_ADC_Start
 312              	.LVL23:
 140:Core/Src/main.c ****     while(HAL_ADC_PollForConversion(&hadc,HAL_MAX_DELAY)!= HAL_OK);
 313              		.loc 1 140 5 view .LVU84
 314 00ae 0A20     		movs	r0, #10
 315 00b0 FFF7FEFF 		bl	HAL_Delay
 316              	.LVL24:
 141:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 317              		.loc 1 141 5 view .LVU85
 318              	.L12:
 141:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 319              		.loc 1 141 57 discriminator 1 view .LVU86
 141:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 320              		.loc 1 141 11 is_stmt 0 discriminator 1 view .LVU87
 321 00b4 0121     		movs	r1, #1
 322 00b6 1948     		ldr	r0, .L19+16
 323 00b8 4942     		rsbs	r1, r1, #0
 324 00ba FFF7FEFF 		bl	HAL_ADC_PollForConversion
 325              	.LVL25:
 141:Core/Src/main.c ****     HAL_ADC_Stop(&hadc);
 326              		.loc 1 141 57 discriminator 1 view .LVU88
 327 00be 0028     		cmp	r0, #0
 328 00c0 F8D1     		bne	.L12
 142:Core/Src/main.c ****     adc_value_right = HAL_ADC_GetValue(&hadc);
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 15


 329              		.loc 1 142 5 is_stmt 1 view .LVU89
 330 00c2 164C     		ldr	r4, .L19+16
 331 00c4 2000     		movs	r0, r4
 332 00c6 FFF7FEFF 		bl	HAL_ADC_Stop
 333              	.LVL26:
 143:Core/Src/main.c **** 
 334              		.loc 1 143 5 view .LVU90
 143:Core/Src/main.c **** 
 335              		.loc 1 143 23 is_stmt 0 view .LVU91
 336 00ca 2000     		movs	r0, r4
 337 00cc FFF7FEFF 		bl	HAL_ADC_GetValue
 338              	.LVL27:
 143:Core/Src/main.c **** 
 339              		.loc 1 143 21 view .LVU92
 340 00d0 0F4B     		ldr	r3, .L19+4
 341 00d2 1880     		strh	r0, [r3]
 145:Core/Src/main.c ****         // Activate LED for PA3 (left)
 342              		.loc 1 145 5 is_stmt 1 view .LVU93
 145:Core/Src/main.c ****         // Activate LED for PA3 (left)
 343              		.loc 1 145 24 is_stmt 0 view .LVU94
 344 00d4 124B     		ldr	r3, .L19+20
 345 00d6 1A88     		ldrh	r2, [r3]
 145:Core/Src/main.c ****         // Activate LED for PA3 (left)
 346              		.loc 1 145 8 view .LVU95
 347 00d8 0E4B     		ldr	r3, .L19+8
 348 00da 9A42     		cmp	r2, r3
 349 00dc 9AD9     		bls	.L13
 147:Core/Src/main.c ****     } else {
 350              		.loc 1 147 9 is_stmt 1 view .LVU96
 351 00de 0122     		movs	r2, #1
 352 00e0 8021     		movs	r1, #128
 353 00e2 0A48     		ldr	r0, .L19
 354 00e4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 355              	.LVL28:
 356              	.L14:
 152:Core/Src/main.c ****         // Activate LED for PA4 (front)
 357              		.loc 1 152 5 view .LVU97
 152:Core/Src/main.c ****         // Activate LED for PA4 (front)
 358              		.loc 1 152 25 is_stmt 0 view .LVU98
 359 00e8 0E4B     		ldr	r3, .L19+24
 360 00ea 1A88     		ldrh	r2, [r3]
 152:Core/Src/main.c ****         // Activate LED for PA4 (front)
 361              		.loc 1 152 8 view .LVU99
 362 00ec 094B     		ldr	r3, .L19+8
 363 00ee 9A42     		cmp	r2, r3
 364 00f0 96D9     		bls	.L15
 154:Core/Src/main.c ****     } else {
 365              		.loc 1 154 9 is_stmt 1 view .LVU100
 366 00f2 0122     		movs	r2, #1
 367 00f4 4021     		movs	r1, #64
 368 00f6 0548     		ldr	r0, .L19
 369 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 370              	.LVL29:
 371 00fc 95E7     		b	.L16
 372              	.L17:
 163:Core/Src/main.c ****     }
 373              		.loc 1 163 9 view .LVU101
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 16


 374 00fe 0022     		movs	r2, #0
 375 0100 2021     		movs	r1, #32
 376 0102 0248     		ldr	r0, .L19
 377 0104 FFF7FEFF 		bl	HAL_GPIO_WritePin
 378              	.LVL30:
 379 0108 99E7     		b	.L9
 380              	.L20:
 381 010a C046     		.align	2
 382              	.L19:
 383 010c 00040048 		.word	1207960576
 384 0110 00000000 		.word	adc_value_right
 385 0114 6C070000 		.word	1900
 386 0118 00240140 		.word	1073816576
 387 011c 00000000 		.word	hadc
 388 0120 00000000 		.word	adc_value_left
 389 0124 00000000 		.word	adc_value_front
 390              		.cfi_endproc
 391              	.LFE43:
 393              		.section	.text.adc_set_channel,"ax",%progbits
 394              		.align	1
 395              		.global	adc_set_channel
 396              		.syntax unified
 397              		.code	16
 398              		.thumb_func
 400              	adc_set_channel:
 401              	.LVL31:
 402              	.LFB45:
 225:Core/Src/main.c ****     ADC_ChannelConfTypeDef sConfig = {0};
 403              		.loc 1 225 46 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 16
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 225:Core/Src/main.c ****     ADC_ChannelConfTypeDef sConfig = {0};
 407              		.loc 1 225 46 is_stmt 0 view .LVU103
 408 0000 10B5     		push	{r4, lr}
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 4, -8
 411              		.cfi_offset 14, -4
 412 0002 84B0     		sub	sp, sp, #16
 413              		.cfi_def_cfa_offset 24
 414 0004 0400     		movs	r4, r0
 226:Core/Src/main.c ****     sConfig.Channel = adcChannelNum;
 415              		.loc 1 226 5 is_stmt 1 view .LVU104
 226:Core/Src/main.c ****     sConfig.Channel = adcChannelNum;
 416              		.loc 1 226 28 is_stmt 0 view .LVU105
 417 0006 0C22     		movs	r2, #12
 418 0008 0021     		movs	r1, #0
 419 000a 01A8     		add	r0, sp, #4
 420              	.LVL32:
 226:Core/Src/main.c ****     sConfig.Channel = adcChannelNum;
 421              		.loc 1 226 28 view .LVU106
 422 000c FFF7FEFF 		bl	memset
 423              	.LVL33:
 227:Core/Src/main.c ****     sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 424              		.loc 1 227 5 is_stmt 1 view .LVU107
 227:Core/Src/main.c ****     sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 425              		.loc 1 227 21 is_stmt 0 view .LVU108
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 17


 426 0010 0194     		str	r4, [sp, #4]
 228:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 427              		.loc 1 228 5 is_stmt 1 view .LVU109
 228:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 428              		.loc 1 228 18 is_stmt 0 view .LVU110
 429 0012 8023     		movs	r3, #128
 430 0014 5B01     		lsls	r3, r3, #5
 431 0016 0293     		str	r3, [sp, #8]
 229:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 432              		.loc 1 229 5 is_stmt 1 view .LVU111
 229:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 433              		.loc 1 229 26 is_stmt 0 view .LVU112
 434 0018 8023     		movs	r3, #128
 435 001a 5B05     		lsls	r3, r3, #21
 436 001c 0393     		str	r3, [sp, #12]
 230:Core/Src/main.c ****     {
 437              		.loc 1 230 5 is_stmt 1 view .LVU113
 230:Core/Src/main.c ****     {
 438              		.loc 1 230 9 is_stmt 0 view .LVU114
 439 001e 0548     		ldr	r0, .L24
 440 0020 01A9     		add	r1, sp, #4
 441 0022 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 442              	.LVL34:
 230:Core/Src/main.c ****     {
 443              		.loc 1 230 8 view .LVU115
 444 0026 0028     		cmp	r0, #0
 445 0028 01D1     		bne	.L23
 234:Core/Src/main.c **** //JUSTIN - END
 446              		.loc 1 234 1 view .LVU116
 447 002a 04B0     		add	sp, sp, #16
 448              		@ sp needed
 449 002c 10BD     		pop	{r4, pc}
 450              	.L23:
 232:Core/Src/main.c ****     }
 451              		.loc 1 232 7 is_stmt 1 view .LVU117
 452 002e FFF7FEFF 		bl	Error_Handler
 453              	.LVL35:
 454              	.L25:
 455 0032 C046     		.align	2
 456              	.L24:
 457 0034 00000000 		.word	hadc
 458              		.cfi_endproc
 459              	.LFE45:
 461              		.global	adc_value_right
 462              		.section	.bss.adc_value_right,"aw",%nobits
 463              		.align	1
 466              	adc_value_right:
 467 0000 0000     		.space	2
 468              		.global	adc_value_front
 469              		.section	.bss.adc_value_front,"aw",%nobits
 470              		.align	1
 473              	adc_value_front:
 474 0000 0000     		.space	2
 475              		.global	adc_value_left
 476              		.section	.bss.adc_value_left,"aw",%nobits
 477              		.align	1
 480              	adc_value_left:
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 18


 481 0000 0000     		.space	2
 482              		.text
 483              	.Letext0:
 484              		.file 3 "c:\\users\\rosto\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 485              		.file 4 "c:\\users\\rosto\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 486              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 487              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 488              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 489              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 490              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 491              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 492              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 493              		.file 12 "Core/Inc/adc.h"
 494              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 495              		.file 14 "Core/Inc/gpio.h"
 496              		.file 15 "<built-in>"
ARM GAS  C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:19     .text.Error_Handler:0000000000000000 $t
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:25     .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:57     .text.SystemClock_Config:0000000000000000 $t
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:63     .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:166    .text.main:0000000000000000 $t
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:172    .text.main:0000000000000000 main
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:383    .text.main:000000000000010c $d
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:466    .bss.adc_value_right:0000000000000000 adc_value_right
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:480    .bss.adc_value_left:0000000000000000 adc_value_left
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:473    .bss.adc_value_front:0000000000000000 adc_value_front
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:394    .text.adc_set_channel:0000000000000000 $t
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:400    .text.adc_set_channel:0000000000000000 adc_set_channel
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:457    .text.adc_set_channel:0000000000000034 $d
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:463    .bss.adc_value_right:0000000000000000 $d
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:470    .bss.adc_value_front:0000000000000000 $d
C:\Users\rosto\AppData\Local\Temp\cc60cG8D.s:477    .bss.adc_value_left:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_ADC_Init
HAL_GPIO_WritePin
HAL_ADC_Start
HAL_Delay
HAL_ADC_PollForConversion
HAL_ADC_Stop
HAL_ADC_GetValue
hadc
HAL_ADC_ConfigChannel
